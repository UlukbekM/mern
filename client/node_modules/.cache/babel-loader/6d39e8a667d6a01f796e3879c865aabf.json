{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ulukb\\\\zProjects\\\\mern new\\\\client\\\\src\\\\Components\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Task = props => {\n  _s();\n  console.log(props);\n  const [checked, setChecked] = useState(props.completed);\n\n  // function checkLoad() {\n\n  // }\n\n  const convertDate = date => {\n    let year = date.substring(0, 4);\n    let tempMonth = date.substring(5, 7);\n    let day = date.substring(8, 10);\n    let month = '';\n    if (tempMonth === \"01\") {\n      month = 'January';\n    } else if (tempMonth === \"02\") {\n      month = 'February';\n    } else if (tempMonth === \"03\") {\n      month = 'March';\n    } else if (tempMonth === \"04\") {\n      month = 'April';\n    } else if (tempMonth === \"05\") {\n      month = 'May';\n    } else if (tempMonth === \"06\") {\n      month = 'June';\n    } else if (tempMonth === \"07\") {\n      month = 'July';\n    } else if (tempMonth === \"08\") {\n      month = 'August';\n    } else if (tempMonth === \"09\") {\n      month = 'September';\n    } else if (tempMonth === \"10\") {\n      month = 'October';\n    } else if (tempMonth === \"11\") {\n      month = 'November';\n    } else if (tempMonth === \"12\") {\n      month = 'December';\n    }\n    return month + ' ' + day + ', ' + year;\n  };\n  const checkboxUpdate = () => {\n    // document.getElementById(props._id).checked = true;\n    Axios.put(\"http://localhost:3001/updateTaskBool\", {\n      email: props.email\n    }).then(() => {\n      setChecked(!checked);\n    });\n    // console.log(props._id)\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => checkboxUpdate(),\n        id: props._id,\n        checked: checked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.taskname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Due: \", convertDate(new Date(props.date).toISOString().substring(0, 10))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => props.handleClick(props.taskname, new Date(props.date)),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.delete(props._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Task, \"Sqwkjm1VkR0mnJw8T0M4PtkDtNU=\");\n_c = Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","Axios","Task","props","console","log","checked","setChecked","completed","convertDate","date","year","substring","tempMonth","day","month","checkboxUpdate","put","email","then","_id","taskname","Date","toISOString","event","handleClick","delete"],"sources":["C:/Users/ulukb/zProjects/mern new/client/src/Components/Tasks.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport Axios from 'axios';\r\n\r\nexport const Task = (props) => {\r\n    console.log(props)\r\n    const [checked, setChecked] = useState(props.completed)\r\n\r\n    // function checkLoad() {\r\n\r\n    // }\r\n\r\n    const convertDate = (date) => {\r\n        let year = date.substring(0,4)\r\n        let tempMonth = date.substring(5,7)\r\n        let day = date.substring(8,10)\r\n        let month = ''\r\n\r\n        if(tempMonth === \"01\") {\r\n            month = 'January'\r\n        } else if(tempMonth === \"02\") {\r\n            month = 'February'\r\n        } else if(tempMonth === \"03\") {\r\n            month = 'March'\r\n        } else if(tempMonth === \"04\") {\r\n            month = 'April'\r\n        } else if(tempMonth === \"05\") {\r\n            month = 'May'\r\n        } else if(tempMonth === \"06\") {\r\n            month = 'June'\r\n        } else if(tempMonth === \"07\") {\r\n            month = 'July'\r\n        } else if(tempMonth === \"08\") {\r\n            month = 'August'\r\n        } else if(tempMonth === \"09\") {\r\n            month = 'September'\r\n        } else if(tempMonth === \"10\") {\r\n            month = 'October'\r\n        } else if(tempMonth === \"11\") {\r\n            month = 'November'\r\n        } else if(tempMonth === \"12\") {\r\n            month = 'December'\r\n        }\r\n\r\n        return month + ' ' + day + ', ' + year\r\n    }\r\n\r\n    const checkboxUpdate = () => {\r\n        // document.getElementById(props._id).checked = true;\r\n        Axios.put(\"http://localhost:3001/updateTaskBool\",{\r\n            email: props.email,\r\n        }).then(()=> {\r\n            setChecked(!checked)\r\n        })\r\n        // console.log(props._id)\r\n    }\r\n\r\n    return(<>\r\n        <div className=\"taskItem\">\r\n            <input type=\"checkbox\" onChange={()=>checkboxUpdate()} id={props._id} checked={checked}/>\r\n            <h4>{props.taskname}</h4>\r\n            <h4>Due: {convertDate(new Date(props.date).toISOString().substring(0, 10))}</h4>\r\n            <button onClick={event => props.handleClick(props.taskname,new Date(props.date))}>Edit</button>\r\n            <button onClick={()=>props.delete(props._id)}>Delete</button>\r\n        </div>\r\n    </>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}