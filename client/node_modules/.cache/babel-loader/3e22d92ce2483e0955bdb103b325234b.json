{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ulukb\\\\zProjects\\\\mern new\\\\client\\\\src\\\\Components\\\\Home.js\";\nimport React, { useState } from \"react\";\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwt_decode from \"jwt-decode\";\n\n//https://www.npmjs.com/package/@react-oauth/google\n//https://www.npmjs.com/package/jwt-decode\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  // const [credentials, setCredentials] = useState(\"\")\n\n  const decodeJWT = credentials => {\n    // var token = \"eyJ0eXAiO.../// jwt token\";\n    var decoded = jwt_decode(credentials);\n    console.log(decoded);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: credentialResponse => {\n        console.log(credentialResponse);\n        // setCredentials(credentialResponse)\n        decodeJWT(credentialResponse.credential);\n      },\n      onError: () => {\n        console.log('Login Failed');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","GoogleLogin","jwt_decode","Home","decodeJWT","credentials","decoded","console","log","credentialResponse","credential"],"sources":["C:/Users/ulukb/zProjects/mern new/client/src/Components/Home.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n\r\n//https://www.npmjs.com/package/@react-oauth/google\r\n//https://www.npmjs.com/package/jwt-decode\r\n\r\nexport const Home = () => {\r\n\r\n    // const [credentials, setCredentials] = useState(\"\")\r\n    \r\n\r\n    const decodeJWT = (credentials) => {\r\n        // var token = \"eyJ0eXAiO.../// jwt token\";\r\n        var decoded = jwt_decode(credentials);\r\n\r\n        console.log(decoded);\r\n    }\r\n\r\n    return(<>\r\n        <GoogleLogin\r\n        onSuccess={credentialResponse => {\r\n            console.log(credentialResponse)\r\n            // setCredentials(credentialResponse)\r\n            decodeJWT(credentialResponse.credential)\r\n        }}\r\n        onError={() => {\r\n            console.log('Login Failed')\r\n        }}\r\n        />\r\n    </>)\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,UAAU,MAAM,YAAY;;AAGnC;AACA;AAAA;AAAA;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;EAEtB;;EAGA,MAAMC,SAAS,GAAIC,WAAW,IAAK;IAC/B;IACA,IAAIC,OAAO,GAAGJ,UAAU,CAACG,WAAW,CAAC;IAErCE,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACxB,CAAC;EAED,oBAAO;IAAA,uBACH,QAAC,WAAW;MACZ,SAAS,EAAEG,kBAAkB,IAAI;QAC7BF,OAAO,CAACC,GAAG,CAACC,kBAAkB,CAAC;QAC/B;QACAL,SAAS,CAACK,kBAAkB,CAACC,UAAU,CAAC;MAC5C,CAAE;MACF,OAAO,EAAE,MAAM;QACXH,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC/B;IAAE;MAAA;MAAA;MAAA;IAAA;EACA,iBACH;AACP,CAAC;AAAA,KAxBYL,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}