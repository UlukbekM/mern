{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ulukb\\\\zProjects\\\\mern new\\\\client\\\\src\\\\Components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwt_decode from \"jwt-decode\";\nimport { useGoogleLogin } from '@react-oauth/google';\n\n//https://www.npmjs.com/package/@react-oauth/google\n//https://www.npmjs.com/package/jwt-decode\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const [credentials, setCredentials] = useState([]);\n  const decodeJWT = credentials => {\n    var decoded = jwt_decode(credentials);\n    setCredentials(decoded);\n    console.log(decoded);\n  };\n  const login = useGoogleLogin({\n    onSuccess: codeResponse => console.log(codeResponse),\n    flow: 'auth-code'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => login(),\n      children: [\"Sign in with Google \\uD83D\\uDE80\", ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"oAkDDXHuu59kCq9etPiL7LjvjGo=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","GoogleLogin","jwt_decode","useGoogleLogin","Home","credentials","setCredentials","decodeJWT","decoded","console","log","login","onSuccess","codeResponse","flow"],"sources":["C:/Users/ulukb/zProjects/mern new/client/src/Components/Home.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { useGoogleLogin } from '@react-oauth/google';\r\n\r\n//https://www.npmjs.com/package/@react-oauth/google\r\n//https://www.npmjs.com/package/jwt-decode\r\n\r\nexport const Home = () => {\r\n    const [credentials, setCredentials] = useState([])\r\n    \r\n    const decodeJWT = (credentials) => {\r\n        var decoded = jwt_decode(credentials);\r\n        setCredentials(decoded)\r\n\r\n        console.log(decoded);\r\n    }\r\n\r\n    const login = useGoogleLogin({\r\n        onSuccess: codeResponse => console.log(codeResponse),\r\n        flow: 'auth-code',\r\n    });\r\n\r\n    return(<>\r\n        {/* <GoogleLogin\r\n        onSuccess={credentialResponse => {\r\n            console.log(credentialResponse)\r\n            decodeJWT(credentialResponse.credential)\r\n        }}\r\n        onError={() => {\r\n            console.log('Login Failed')\r\n        }}\r\n        /> */}\r\n        <button onClick={() => login()}>\r\n            Sign in with Google ðŸš€{' '}\r\n        </button>\r\n    </>)\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,UAAU,MAAM,YAAY;AAEnC,SAASC,cAAc,QAAQ,qBAAqB;;AAEpD;AACA;AAAA;AAAA;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMO,SAAS,GAAIF,WAAW,IAAK;IAC/B,IAAIG,OAAO,GAAGN,UAAU,CAACG,WAAW,CAAC;IACrCC,cAAc,CAACE,OAAO,CAAC;IAEvBC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACxB,CAAC;EAED,MAAMG,KAAK,GAAGR,cAAc,CAAC;IACzBS,SAAS,EAAEC,YAAY,IAAIJ,OAAO,CAACC,GAAG,CAACG,YAAY,CAAC;IACpDC,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,oBAAO;IAAA,uBAUH;MAAQ,OAAO,EAAE,MAAMH,KAAK,EAAG;MAAA,+CACJ,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACrB,iBACV;AACP,CAAC;AAAA,GA7BYP,IAAI;EAAA,QAUCD,cAAc;AAAA;AAAA,KAVnBC,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}